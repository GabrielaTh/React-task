{"version":3,"sources":["nanotechnology.png","components/FormTask.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FromTask","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Date","Autor","Description","handleInputChange","bind","assertThisInitialized","handleSubmit","e","preventDefault","props","onAddTask","setState","_e$target","target","value","name","console","log","defineProperty","react_default","a","createElement","className","onSubmit","type","onChange","placeholder","Component","App","task","handleAddTask","index","filter","i","concat","toConsumableArray","_this2","map","key","onClick","removeTask","href","length","src","logo","alt","FormTask","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.031b6886.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nanotechnology.a1920303.png\";","import React, {\n  Component\n} from 'react';\n\nclass FromTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Date: '',\n      Autor: '',\n      Description: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onAddTask(this.state);\n    this.setState({\n      Date: '',\n      Autor: '',\n      Description: ''\n    });\n  }\n\n  handleInputChange(e) {\n    const {\n      value,\n      name\n    } = e.target;\n    console.log(value, name);\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render(){\n    return(\n    <div className=\"card border-info mb-3 m-3\">\n      <form onSubmit={this.handleSubmit} className=\"card-body\">\n          <div className=\"form-group\">\n            <input \n            type=\"text\" \n            name=\"Date\" \n            value={this.state.Date} \n            onChange={this.handleInputChange} \n            className=\"form-control\" \n            placeholder=\"Date\"/>\n          </div>\n          <div className = \"form-group\">\n            <input \n            type =\"text\" \n            name =\"Autor\" \n            className = \"form-control\"\n            value ={this.state.Autor} \n            onChange ={this.handleInputChange} \n            placeholder = \"Autor\"/>\n          </div> \n          <div className = \"form-group\">\n            <input \n            type = \"text\" \n            name = \"Description\" \n            className = \"form-control\" \n            value = {this.state.Description} \n            onChange = {this.handleInputChange} \n            placeholder = \"Description\"/>\n          </div> \n          <button type = \"submit\" className = \"btn btn-outline-info\" >\n              Save \n          </button>\n      </form>\n    </div>\n\n    )\n  }\n\n}\n\nexport default FromTask;","import React, {Component} from 'react';\nimport logo from './nanotechnology.png';\nimport './App.css';\n\n//Data\nimport {task} from './task.json';\n//subcompenents\nimport FormTask from './components/FormTask';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      task\n    }\n    this.handleAddTask = this.handleAddTask.bind(this);\n  }\n\n  removeTask(index) {\n    this.setState({\n      task: this.state.task.filter((e, i) => {\n        return i !== index\n      })\n    });\n  }\n\n  handleAddTask(task) {\n    this.setState({\n      task: [...this.state.task, task]\n    })\n  }\n\n  render() {\n    const task = this.state.task.map((task, i) => {\n      return ( \n      <div className = \"col-md-4\" key = {i}>\n        <div className = \"card border-info text-center m-1\">\n          <div className = \"card-header bg-transparent border-info\">\n            <h5> {task.Date} </h5> \n          </div> \n          <div className = \"card-body\">\n            <p>{task.Description}</p> <p> {task.Autor}</p> \n              <button className = \"btn btn-outline-danger\" onClick = {this.removeTask.bind(this, i)}>\n               Delete \n              </button>  \n          </div>\n        </div> \n      </div>\n      )\n    });\n\n    // Return the component\n    return ( \n    <div className = \"App\">\n      <nav className = \"navbar navbar-dark bg-info\">\n          <a href = \"#\" className = \"nav-link text-white \" href = \"/\">\n             Task\n            <span className = \"badge badge-pill badge-light ml-2\" > {this.state.task.length } </span> \n          </a> \n      </nav> \n      <div className = \"container\">\n        <div className = \"row mt-4\">\n          <div className = \"col-md-4 text-center\">\n            <img src = {logo} className = \"App-logo\" alt = \"logo\"/>\n            <FormTask onAddTask = {this.handleAddTask}></FormTask> \n          </div> \n          <div className = \"col-md-8\">\n            <div className = \"row\" >{task}</div> \n          </div> \n        </div> \n      </div> \n    </div>\n    );\n  }\n}\n\nexport default App;","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              \n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}